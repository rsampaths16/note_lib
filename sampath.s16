/*
	Coder	: R Sampath Sukesh.
	Handle	: rsampaths16.
	Email	: rsampaths16@gmail.com.
	Country	: India.
*/
#pragma comment(linker, "/STACK:36777216")
#include<bits/stdc++.h>
using namespace std;

#define ONLINE
#ifndef ONLINE
	#define TRACE
	#define DEBUG
#endif

#ifdef TRACE
	#define trace()             cerr<<__FUNCTION__<<" : "<<__LINE__<<endl
	#define trace1(a)           cerr<<__FUNCTION__<<" : "<<__LINE__<<" | "<<#a<<'='<<a<<endl
	#define trace2(a,b)         cerr<<__FUNCTION__<<" : "<<__LINE__<<" | "<<#a<<'='<<a <<" | "<<#b<<'='<<b<<endl
	#define trace3(a,b,c)       cerr<<__FUNCTION__<<" : "<<__LINE__<<" | "<<#a<<'='<<a <<" | "<<#b<<'='<<b<<" | "<<#c<<'='<<c<<endl
	#define trace4(a,b,c,d)     cerr<<__FUNCTION__<<" : "<<__LINE__<<" | "<<#a<<'='<<a <<" | "<<#b<<'='<<b<<" | "<<#c<<'='<<c<<" | "<<#d<<'='<<d<<endl
	#define trace5(a,b,c,d,e)   cerr<<__FUNCTION__<<" : "<<__LINE__<<" | "<<#a<<'='<<a <<" | "<<#b<<'='<<b<<" | "<<#c<<'='<<c<<" | "<<#d<<'='<<d<<" | "<<#e<<'='<<e<<endl
	#define trace6(a,b,c,d,e,f) cerr<<__FUNCTION__<<" : "<<__LINE__<<" | "<<#a<<'='<<a <<" | "<<#b<<'='<<b<<" | "<<#c<<'='<<c<<" | "<<#d<<'='<<d<<" | "<<#e<<'='<<e<<" | "<<#f<<'='<<f<<endl
#else
	#define trace()
	#define trace1(a)
	#define trace2(a,b)
	#define trace3(a,b,c)
	#define trace4(a,b,c,d)
	#define trace5(a,b,c,d,e)
	#define trace6(a,b,c,d,e,f)
#endif

#ifdef DEBUG
	#define putx(x) x
	#define msg(MSG) cerr <<__FUNCTION__<<" : msg :- "<< MSG <<endl
	#define debug(x) cerr << '>' << #x << ':' << x << endl
#else
	#define putx(x)
	#define msg(MSG)
	#define debug(x)
#endif

typedef int64_t ll;
typedef long double ld;
typedef istringstream iss;
typedef ostringstream oss;

// My Macros

// I/O
// special i/o
#define fast() std::ios::sync_with_stdio(false)
#define pw putchar(' ')
#define pn putchar('\n')
#define dg(s,i) printf("%s %d",s,i)

// num i/o
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define sl(n) scanf("%I64d",&n)
#define pl(n) printf("%I64d",n)
#define sd(n) scanf("%Lf",&n)
#define pd(n) printf("%Lf",n)

// char i/o
#define gc(n) n=getchar();{char left_overs_of_getchar=getchar();}
#define pc(n) putchar(n)
#define gs(n) scanf("%s",n)
#define ps(n) print("%s",n)

// Access
#define sz size()
#define ln length()
#define ff first
#define ss second
#define pb push_back
#define pp pop_back
#define mp make_pair

// loops
// int
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define RFOR(i,a,b) for(int i=(a);i>=(b);i--)

// STL
#define forall(it, x) for(__typeof((x).begin()) it=(x).begin();it!=(x).end();it++)
#define rep(i,z) for(int i=0;i<(z.sz);i++)
#define rforall(it, x) for(__typeof((x).rbegin()) it=(x).rbegin();it!=(x).rend();it++)
#define rrep(i,z) for(int i=((z.sz)-1);i>=0;i--)

// special
#define mset(a,val) memset(a,val,sizeof(a))
#define mcpy(a,b)   memcpy(a,b,sizeof(a))
#define mcmp(a,b)   memcmp(a,b,sizeof(a))
#define all(a)  a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define ins(A, P, B) A.insert(A.begin() + P, B)
#define ers(A, P) A.erase(A.begin() + P)
#define lbnd(A, x) (lower_bound(all(A), x) - A.begin())
#define is_in(T, x) (T.find(x) != T.end())
template<class T> void unq(T &A){ A.resize(unique(all(sort(all(A))))-A.begin());}

// Constant's
// 2PI-D' = 360-R'
const int Inf = 0x3f3f3f3f;
const ll Inff = 0x3f3f3f3f3f3f3f3fLL;
const int MAX = ll(10e+7);  // const int MAX=1000000007;
const ld  ESP = ld(1e-9);
const ld PI=ld(3.1415926535897932384626); // M_PI
const int dx[]={-1,0,1,0};
const int dy[]={0,1,0,-1};

#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
